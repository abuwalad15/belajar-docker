docker images
docker pull mongo
docker container ls --all
docker container create --name mongoserver1 mongo
docker container create --name mongoserver2 mongo
docker container start mongoserver1
docker container rm mongoserver1
docker container stop mongoserver1
docker container create --name mongoserver1 -p 8181:27017 mongo
docker images rm mongo
docker build --tag app-golang:1.0 .
docker container create --name golang-app1 -p 8080:8080 app-golang:1.0
docker tag app-golang:1.0 abuwalad/app-golang:1.0
docker push abuwalad/app-golang:1.0
docker login
username:
Password:
Login Sucessed

docker container create --name nginxserver1 nginx
docker container start nginxserver1
docker container create --name nginxserver1 -p 8080:80 nginx
docker container stop nginxserver1
docker container rm nginxserver1

POD
======================
kubectl version
docker pull nginx
kubectl get node
kubectl describe node docker-desktop
kubectl create -f nginx.yaml
kubectl get pod
kubectl get pod -o wide
kubectl describe pod nginx
kubectl port-forward nginx 8888:80 (portakses:portNginx)
kubectl delete pod nginx
kubectl delete pod -l environtment=development
kubectl delete pod --all --namespace finance (semua pod yangb ada di finance akan dihapus)
Label
========================
nginx-with-label.yaml
kubectl create -f nginx-with-label.yaml
kubectl get pod --show-labels
kubectl label pod nginx environtment=development
kubectl get pod -l team
kubectl get pod -l '!key'
kubectl get pod -l key1,key2=value

Annotation
========================
kubectl create -f nginx-with-annotation.yaml 
kubectl describe pod nginx-with-annotation
kubectl annotate pod nginx-with-label description="ini adalah aplikasi label dengan annotation"

Namespace
========================
kubectl get namespace
kubectl get pod --namespace default
kubectl create -f finance-namespace.yaml --namespace namespace
kubectl create -f nginx.yaml --namespace finance
kubectl delete namespace finance

Replicationcontroller
========================
kubectl create -f nginx-rc.yaml
replicationcontroller/nginx-rc created
kubectl get replicationcontroller / rc
kubectl get pod
kubectl delete pod nginx-rc-7ddn9

kubectl delete rc nginx-rc
kubectl delete rc nginx-rc --cascade=false
kubectl get pod --all

Replica set
========================
kubectl create -f nginx-rs.yaml
kubectl get pod
kubectl delete pod nginx-tgjpm

kubectl create -f nginx-rs-me.yaml
kubectl get pod
kubectl get pod --show-labels

Daemon set
========================
kubectl create -f nginx-ds.yaml
kubectl get daemonsets
kubectl delete daemonsets namadaemonsets

Cronjob
=========================
kubectl create -f cronjob-nodejs.yaml
kubectl get all
kubectl describe cronjob nodejs-cronjob
kubectl delete cronjob nodejs-cronjob

All
=========================
kubectl get all --all
kubectl get all --namespace namanamespace
kubectl delete all --all
kubectl delete all --namespace namanamespace

Create Service
=========================
kubectl create -f service-nginx.yaml
kubectl exec -it curl -- /bin/sh
curl http://10.100.98.32:8080
exit
kubectl delete all --all

Access Service
=========================
kubectl get all
kubectl exec -it curl -- /bin/sh
env
env | grep NGINX_SERVICE
nama-service.nama-namespace.svc.cluster.local
curl http://nginx-service.default.svc.cluster.local:8080
exit
kubectl get endpoints

Example Service
=========================
kubectl create -f service-example.yaml
kubectl get all
kubectl exec -it curl -- /bin/sh
curl http://example-service.default.svc.cluster.local:80

Service with nodeport
=========================
kubectl create -f service-nginx-nodeport.yaml
kubectl get all
kubectl service nginx-service

Service with Load Balancer
=========================
kubectl create -f service-nginx-loadbalancer.yaml
kubectl get all
kubectl service nginx-service

Service with ingress
=========================
minikube addosn enable ingress
kubectl get all --namespace kube-system
kubectl create -f service-nginx-loadbalancer.yaml
kubectl get all
kubectl service nginx-service







